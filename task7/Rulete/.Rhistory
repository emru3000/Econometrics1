sum(x)/3
x <- as.numeric(strsplit(xstr, ""){(1)})
x <- as.numeric(strsplit(xstr, ""){[1]})
length(x)
x <- as.numeric(strsplit(xstr, "")([1]))
xstr = paste(as.character(1:1000), collapse = "")
as.numeric(xstr)
x <- as.numeric(strsplit(xstr, "")([1]))
length(x)
sum(x)/3
library(swirl)
open(swirl)
swirl()
range(cars$price)
range(price)
range(cars$price)
var(data)
var(cars)
var(cars$price)
sd(cars$price)
nxt()
28
Q1-Q3
range=16-22
16-22
16; 22
10
25
nxt()
4
summary(cars$price)
install.packages(c('swirl', 'base64enc'))
library("swirl")
install_course_github("1vbutkus", "Statistical_Inference_PE")
install.packages(c('swirl', 'base64enc'))
library("swirl")
install_course_github("1vbutkus", "Statistical_Inference_PE")
install.packages(c("swirl", "base64enc"))
library("swirl")
swirl()
swirl()
library("swirl")
install_course_github("1vbutkus", "Statistical_Inference_PE")
library("swirl")
swirl()
5
11/12
11/12
n = 10
x = rnorm(n)
sigma1 = function (x) mean((x-mean(x))^2)
sim = replicate(10^5, sigma1(rnorm(n)))
mean(simm)*n/(n-1)
n = 10
x = rnorm(n)
sigma1 = function (x) mean((x-mean(x))^2)
sim = replicate(10^5, sigma1(rnorm(n)))
mean(sim)*n/(n-1)
n <- 100000
balansas <- c(rep(0, times=n))
teigiamas <- c(rep(0, times=n))
for (i in 1:n) {
balansas[i] <- sum(sample(c(1,-1), size=1000, replace=TRUE, prob=c(18/37, 19/37)))
if (balansas[i] > 0) {
teigiamas[i] <- 1}
else {
teigiamas[i] <- 0}}
mean(teigiamas)
n <- 100000
balansas <- c(rep(0, times=n))
teigiamas <- c(rep(0, times=n))
for (i in 1:n) {
balansas[i] <- sum(sample(c(1,-1), size=1000, replace=TRUE, prob=c(18/37, 19/37)))
if (balansas[i] > 0) {
teigiamas[i] <- 1}
else {
teigiamas[i] <- 0}}
mean(teigiamas)
x <- quantile(balansas, probs=0.25)
x
n <- 100000
balansas <- c(rep(0, times=n))
teigiamas <- c(rep(0, times=n))
for (i in 1:n) {
balansas[i] <- sum(sample(c(1,-1), size=1000, replace=TRUE, prob=c(18/37, 19/37)))
if (balansas[i] > 0) {
teigiamas[i] <- 1}
else {
teigiamas[i] <- 0}}
mean(teigiamas)
X <- quantile(balansas, probs=0.25)
X
